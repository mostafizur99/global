import Head from 'next/head'
import { Fragment } from 'react'
import { MongoClient } from 'mongodb';
import CampusList from '../components/campus/CampusList';
import styles from '../styles/Home.module.css';
import Banner from '../components/layout/Banner';

// const DUMMY_CAMPUS = [
//   {
//     id: 'c1',
//     title: 'First Campus',
//     image: 'https://ctfimages.intoglobal.com/xw2h6mjophtz/731sOVK2X4DrG83SK4jXAf/395ba54e3dc059a2fbb5b1fa5ca33cf3/Contentful_-_Campus_LifeUOM.jpg',
//     address: 'Some Address1',
//     description: 'This is first campus'
//   },
//   {
//     id: 'c2',
//     title: 'Second Campus',
//     image: 'https://ctfimages.intoglobal.com/xw2h6mjophtz/731sOVK2X4DrG83SK4jXAf/395ba54e3dc059a2fbb5b1fa5ca33cf3/Contentful_-_Campus_LifeUOM.jpg',
//     address: 'Some Address2',
//     description: 'This is second campus'
//   },
//   {
//     id: 'c3',
//     title: 'Third Campus',
//     image: 'https://ctfimages.intoglobal.com/xw2h6mjophtz/731sOVK2X4DrG83SK4jXAf/395ba54e3dc059a2fbb5b1fa5ca33cf3/Contentful_-_Campus_LifeUOM.jpg',
//     address: 'Some Address3',
//     description: 'This is third campus'
//   }
// ];

export default function Home(props) {


  return (
    <Fragment>
      <Head>
        <title>Global</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <CampusList campuses={props.campus} />
      <Banner />
    </Fragment>
  )
}

// export async function getServerSideProps(context) {
//   const req = context.req;
//   const res = context.res;

//   // fetch data from an API

//   return {
//     props: {
//       campus: DUMMY_CAMPUS
//     }
//   };
// }

export async function getStaticProps() {
  // fetch data from an API
  const client = await MongoClient.connect(`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0.lb8le.mongodb.net/global?retryWrites=true&w=majority`);
  const db = client.db();

  const campusCollection = db.collection('campus');

  const campuses = await campusCollection.find().toArray();

  // console.log(campuses);

  client.close();


  return {
    props: {
      // campus: DUMMY_CAMPUS
      campus: campuses.map((campus) => ({
        title: campus.title,
        address: campus.address,
        image: campus.image,
        id: campus._id.toString()
      }))
    },
    revalidate: 1
  };
}
